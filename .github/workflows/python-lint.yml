name: Python Lint
on:
    push:
      branches:
        - main

jobs:
  pylint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')

  ruff:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
          cache-dependency-path: "python/pyproject.toml"
      - name: Install SemanticKernel
        run: cd python && poetry install --no-ansi
      - name: Run lint
        run: cd python && poetry run ruff check .

  black:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
          cache-dependency-path: "python/pyproject.toml"
      - name: Install SemanticKernel
        run: cd python && poetry install --no-ansi
      - name: Run lint
        run: cd python && poetry run black --check .